apiVersion: apps/v1
kind: Deployment  # type of k8s object to be created
metadata:
  name: reach-deployment
  namespace: default  
spec:  # describes the state
  selector: # defines how the Deployment finds which Pods to manage
    matchLabels:
      app: web
  replicas: 2  # create two replicated Pods; increase replicas if need to scale
  template:  # Pod template
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: reach-site
        image: tiangolo/uvicorn-gunicorn:python3.8
        ports:
          - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: reach-app-entrypoint
  namespace: default
spec:
  type: LoadBalancer  # use LoadBalancer in order to implement rate-limiting
  selector:
    app: web
  ports:
  - port: 80  # port of Service/container; redirects to targetPort
    targetPort: 80  # port app is running on, i.e. port traffic is routed to
    nodePort: 30001
